---
import StepHeader from "@/components/ui/StepHeader.astro";
---

<article id="step-two" class="relative w-full h-[100lvh]">
  <StepHeader number="TWO" action="PICK YOUR PRODUCT" />
  <div
    id="step-two-source-cover"
    class="absolute left-[calc(50%+30px)] -translate-x-1/2 bottom-48 w-60 h-60"
    style="will-change: transform;"
  >
    <img
      src="./assets/steps/cover.png"
      class="w-full h-full object-contain"
      alt="cover"
    />
  </div>
  <div
    id="step-two-source-bag"
    class="absolute left-1/2 -translate-x-1/2 bottom-0 w-80 h-80"
    style="will-change: transform;"
  >
    <img
      src="./assets/steps/bag.avif"
      class="w-full h-full object-contain"
      alt="bag"
    />
  </div>
</article>

<script>
  const target = document.querySelector("#step-two") as HTMLElement;

  const cover = document.querySelector("#step-two-source-cover") as HTMLElement;

  const bag = document.querySelector("#step-two-source-bag") as HTMLElement;

  let ticking: boolean = false;

  let zero: number | undefined = undefined;

  const tickInit = (): void => {
    if (!ticking) {
      window.requestAnimationFrame(scrolling);
      ticking = true;
    }
  };

  const scrolling = (): void => {
    if (typeof zero === "undefined") zero = window.scrollY;

    const currentScroll = window.scrollY;

    const delta = Math.abs(currentScroll - zero);

    bag.style.transform = `translateY(-${delta * 0.5}px)`;

    cover.style.transform = `translateY(-${delta * 0.5}px)`;

    ticking = false;
  };

  const options: IntersectionObserverInit = {
    root: null,
    rootMargin: "0px",
    threshold: 0,
  };

  const observer = new IntersectionObserver((entries): void => {
    if (!target || !bag) return;

    const isIntersecting: boolean = entries[0].isIntersecting;

    if (isIntersecting) {
      window.addEventListener("scroll", tickInit);
    } else window.removeEventListener("scroll", tickInit);
  }, options);

  observer.observe(target);
</script>
