---
import Front from "@/components/ui/Front.astro";
---

<article
  class="sticky top-0 w-full h-dvh grid grid-cols-[1fr_3fr_1fr] grid-rows-1 gap-4 bg-gradient-to-br from-neutral-900 via-neutral-800 to-neutral-900 overflow-hidden"
>
  <div
    id="left-galery"
    class="grid grid-cols-1 grid-rows-[33%_66%] gap-4 transition-all duration-[1000ms] ease-in-out"
  >
    <div>
      <img
        src="assets/galery/s1.webp"
        alt="source"
        class="w-full h-full object-cover object-center-top"
      />
    </div>
    <div>
      <img
        src="assets/galery/s2.avif"
        alt="source"
        class="w-full h-full object-cover"
      />
    </div>
  </div>
  <div class="grid grid-cols-1 grid-rows-4 gap-4">
    <div>
      <img
        src="assets/galery/s3.avif"
        alt="source"
        class="w-full h-full object-cover object-center"
      />
    </div>
    <div id="hero-area" class="relative row-span-2">
      <img
        id="hero-image"
        src="assets/galery/hero.avif"
        alt="hero-image"
        class="absolute left-1/2 -translate-x-1/2 top-1/2 -translate-y-1/2 w-full h-full object-cover"
      />
    </div>
    <div class="">
      <img
        src="assets/galery/s4.avif"
        alt="source"
        class="w-full h-full object-cover"
      />
    </div>
  </div>
  <div
    id="right-galery"
    class="grid grid-cols-1 grid-rows-[66%_33%] gap-4 transition-all duration-[1000ms] ease-in-out"
  >
    <div>
      <img
        src="assets/galery/s5.webp"
        alt="source"
        class="w-full h-full object-cover object-center-top"
      />
    </div>
    <div>
      <img
        src="assets/galery/s6.avif"
        alt="source"
        class="w-full h-full object-cover"
      />
    </div>
  </div>
  <Front />
</article>

<script>
  const loader = document.querySelector("#loader") as HTMLElement;

  if (loader) {
    setTimeout((): void => {
      loader.classList.add("opacity-0");
    }, 100);

    setTimeout((): void => {
      loader.classList.add("hidden");
    }, 500);
  }

  const viewportRatio: number = window.innerWidth / window.innerHeight;

  const section = document.querySelector("#hero") as HTMLElement;

  const container = document.querySelector("#hero-area") as HTMLElement;

  const element = document.querySelector("#hero-image") as HTMLElement;

  const leftGalery = document.querySelector("#left-galery") as HTMLElement;

  const rightGalery = document.querySelector("#right-galery") as HTMLElement;

  const fraction: number = section.getBoundingClientRect().height / 6;

  let containerRatio: number | null;

  let scale: number | null;

  let percentage: number | null;

  let lastScroll: number = 0;

  function sizeCalculated() {
    const { width, height }: { width: number; height: number } =
      container.getBoundingClientRect();

    containerRatio = width / height;

    if (viewportRatio > containerRatio) scale = window.innerWidth / width;
    else scale = window.innerHeight / height;

    element.style.transform = `scale(${scale})`;

    percentage =
      Math.abs(1 - scale) / (section.getBoundingClientRect().height / 2);
  }

  sizeCalculated();

  function updateOnScroll() {
    if (!scale || !percentage) return;

    const scroll = window.scrollY;

    const direction = lastScroll < scroll ? "down" : "up";

    const { height } = section.getBoundingClientRect();

    if (scroll < height) {
      const newScale = Math.max(1, scale - scroll * percentage);
      element.style.transform = `scale(${newScale})`;
    } else {
      element.style.transform = `scale(1)`;
    }

    switch (direction) {
      case "down":
        if (scroll >= fraction && scroll <= fraction * 2) {
          leftGalery.classList.replace(
            "grid-rows-[33%_66%]",
            "grid-rows-[50%_50%]"
          );
          rightGalery.classList.replace(
            "grid-rows-[66%_33%]",
            "grid-rows-[50%_50%]"
          );
        } else if (scroll >= fraction * 3) {
          leftGalery.classList.replace(
            "grid-rows-[50%_50%]",
            "grid-rows-[66%_33%]"
          );
          rightGalery.classList.replace(
            "grid-rows-[50%_50%]",
            "grid-rows-[33%_66%]"
          );
        }

        break;

      case "up":
        if (scroll <= fraction * 3 && scroll >= fraction * 2) {
          leftGalery.classList.replace(
            "grid-rows-[66%_33%]",
            "grid-rows-[50%_50%]"
          );
          rightGalery.classList.replace(
            "grid-rows-[33%_66%]",
            "grid-rows-[50%_50%]"
          );
        } else if (scroll <= fraction) {
          leftGalery.classList.replace(
            "grid-rows-[50%_50%]",
            "grid-rows-[33%_66%]"
          );
          rightGalery.classList.replace(
            "grid-rows-[50%_50%]",
            "grid-rows-[66%_33%]"
          );
        }

        break;
    }

    ticking = false;

    lastScroll = scroll;
  }

  let ticking = false;

  window.addEventListener("scroll", () => {
    if (!ticking) {
      window.requestAnimationFrame(updateOnScroll);
      ticking = true;
    }
  });
</script>
